Aca poner todos los graficos que vamos a estar haciendo (importante para ya ir armando el codigo)
Let's not forget que este no es un TP de programacion que evalua Python, es un Informe en el que el codigo solo sirve para los resultados
La funcion de todo este codigo es hacer los graficos correspondientes, y dichos graficos serán...



Actividad 1 [PvE]

|| Grafico 1: Population over Time (Exponencial vs Logistica ) // los inputs son (N0, r, t=constant, *K)
    -> Curva 1: 
    -> Curva 2:
    -> Curva 3:
    -> Curva 4:
    -> Curva 5:
    -> Curva 6:
    -> Curva 7:
    -> Curva 8:

|| Grafico 2: Variacion Poblacional (dN/dt vs N) 
    -> Curva 1: 
    -> Curva 2:
    -> Curva 3:
    -> Curva 4:
    -> Curva 5:
    -> Curva 6:
    -> Curva 7:
    -> Curva 8:
    


Actividad 2 [PvP] // los inputs son (r1, r2, K1, K2, alpha12, alpha21, [y0], t=constant)

''' Entonces analicen que forma tienen las isoclinas
en este sistema de ecuaciones y determinen sus puntos de equilibrio. Verifiquen que dependiendo de los
parámetros (K1, K2, α12, α21) hay cuatro tipos de gráficos distintos. Para cada tipo de gráfico elijan distintos
valores iniciales N1(t = 0) y N2(t = 0) y grafiquen la evolución temporal N1(t) y N2(t) o sea las trayectorias.
Describan cómo evoluciona el sistema para cada caso dependiendo de las condiciones iniciales. También
pueden graficar el campo de vectores para acompañar la explicación '''

at least 3 graficos:
-> RungeKutta con los distintos valores 

|| Grafico 1: 

**ESTUDIAR PUNTOS DONDE LA DERIVADA = 0, LAS ISOCLINAS
-> 1 para determinar los 4 distintos tipos dependiendo de dichos valores (maybe tengan que ser 4 graficos aca, o maybe 0)
-> 1 para probar los 4 graficos con distintos valores iniciales (maybe tengan que ser 4 graficos aca)



